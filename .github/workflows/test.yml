# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'docs'
      - 'examples'
  push:
    branches:
      - "main"
    paths-ignore:
      - 'README.md'
      - 'docs'
      - 'examples'

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go build -v .

  generate:
    name: Check if generated data is up to date
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go generate ./...
      - run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)
      - run: make generate_docs
      - run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after docs generation. Run 'make generate_docs' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.0.*'
          - '1.1.*'
          - '1.2.*'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - env:
          TF_ACC: "1"
        run: go test -v -cover ./maas/
        timeout-minutes: 10     

  check_e2e_test_status:
    name: Check End to End Tests Status
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    continue-on-error: true
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Install apt Dependencies
        run: sudo apt install -y curl jq
      - name: Check Status of The End to End Tests
        run: ./scripts/check-e2e-tests.sh
